syntax = "proto2";

package voting;

option go_package = "github.com/xdavidwu/evoting/proto";

import "google/protobuf/timestamp.proto";

service Registration {
	rpc RegisterVoter(Voter) returns (Status);
	rpc UnregisterVoter(VoterName) returns (Status);
}

message Voter {
	required string name = 1;
	required string group = 2;
	required bytes public_key = 3;
}

message VoterName {
	required string name = 1;
}

message Status {
	required int32 code = 1;
}

service eVoting {
	rpc PreAuth (VoterName) returns (Challenge);
	rpc Auth (AuthRequest) returns (AuthToken);
	rpc CreateElection (Election) returns (Status);
	rpc CastVote (Vote) returns (Status);
	rpc GetResult(ElectionName) returns (ElectionResult);
}

message Challenge {
	required bytes value = 1;
}

message Response {
	required bytes value = 1;
}

message AuthRequest {
	required VoterName name = 1;
	required Response response = 2;
}

message AuthToken {
	required bytes value = 1;
}

message Election {
	required string name = 1;
	repeated string groups = 2;
	repeated string choices = 3;
	required google.protobuf.Timestamp end_date = 4;
	required AuthToken token = 5;
}

message Vote {
	required string election_name = 1;
	required string choice_name = 2;
	required AuthToken token = 3;
}

message ElectionName {
	required string name = 1;
}

message VoteCount {
	required string choice_name = 1;
	required int32 count = 2;
}

message ElectionResult {
	required int32 status = 1;
	repeated VoteCount counts = 2;
}

service Sync {
	rpc Join(NodeIdentifier) returns (Dump);
	rpc NodesChanged(NodesList) returns (Empty);
	rpc Sql(SqlRequest) returns (Empty);
	rpc NewKey(Key) returns (Empty);
	rpc Ping(Empty) returns (Empty);
}

message Empty {}

message NodesList {
	required NodeIdentifier primary = 1;
	repeated NodeIdentifier nodes = 2;
}

message NodeIdentifier {
	required string address = 1;
}

message Key {
	required string name = 1;
	required bytes key = 2;
}

message Dump {
	required string content = 1;
	repeated Key keys = 2;
	required bytes serverPub = 3;
	required bytes serverPriv = 4;
}

message SqlRequest {
	required string command = 1;
}
